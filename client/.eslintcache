[{"C:\\Users\\Administrator\\crudmernstack\\client\\src\\index.js":"1","C:\\Users\\Administrator\\crudmernstack\\client\\src\\App.js":"2","C:\\Users\\Administrator\\crudmernstack\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Administrator\\crudmernstack\\client\\src\\components\\Users.js":"4","C:\\Users\\Administrator\\crudmernstack\\client\\src\\components\\CreateUser.js":"5","C:\\Users\\Administrator\\crudmernstack\\client\\src\\components\\EditUser.js":"6","C:\\Users\\Administrator\\crudmernstack\\client\\src\\components\\Login.js":"7","C:\\Users\\Administrator\\crudmernstack\\client\\src\\components\\Register.js":"8","C:\\Users\\Administrator\\crudmernstack\\client\\src\\components\\User.js":"9"},{"size":589,"mtime":1611789811371,"results":"10","hashOfConfig":"11"},{"size":881,"mtime":1612168682398,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":2258,"mtime":1612219605924,"results":"14","hashOfConfig":"11"},{"size":4988,"mtime":1612219734617,"results":"15","hashOfConfig":"11"},{"size":218,"mtime":1611802391102,"results":"16","hashOfConfig":"11"},{"size":2249,"mtime":1612183289891,"results":"17","hashOfConfig":"11"},{"size":2360,"mtime":1612026134144,"results":"18","hashOfConfig":"11"},{"size":2464,"mtime":1612163438330,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"ym6o0o",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},"C:\\Users\\Administrator\\crudmernstack\\client\\src\\index.js",[],["41","42"],"C:\\Users\\Administrator\\crudmernstack\\client\\src\\App.js",[],"C:\\Users\\Administrator\\crudmernstack\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Administrator\\crudmernstack\\client\\src\\components\\Users.js",[],"C:\\Users\\Administrator\\crudmernstack\\client\\src\\components\\CreateUser.js",["43","44","45"],"import  { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nfunction CreateUser() {\r\n  const user = localStorage.getItem('user');\r\n  const {userId} = useParams();\r\n  const history = useHistory();\r\n  const [notetitle,setNoteTitle] = useState(\"\");\r\n  const [message,setMessage] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(new Date());\r\n  const [radiobutton, setRadioButton] = useState(false)\r\n  const [dataUpdate, setDataUpdate] = useState({});\r\n  const [buttonUpdateCheck,setButtonUpdateCheck] = useState(false)\r\n  console.log('buttonUpdateCheck',buttonUpdateCheck);\r\n  const daysLeft = calculateDaysLeft(startDate,endDate)\r\n  console.log(startDate,endDate,radiobutton)\r\n \r\n  const SubmitFormHandler = async(e) =>{\r\n      e.preventDefault();\r\n      if (notetitle!==\"\" && message !==\"\"){\r\n          setNoteTitle(\"\");\r\n          setMessage(\"\");\r\n          const userId = localStorage.getItem('userId')\r\n          console.log('userId', userId)\r\n          const {data} = await axios.post('/create',{notetitle,message,userId,startDate,endDate,radiobutton});\r\n          console.log(data)\r\n          history.push(\"/user\")\r\n        }\r\n  }\r\n function calculateDaysLeft(startDate, endDate){\r\n    if (!moment.isMoment(startDate)) startDate = moment(startDate);\r\n    if (!moment.isMoment(endDate)) endDate = moment(endDate);\r\n    return endDate.diff(startDate, \"days\");\r\n }\r\n const handleUpdate = async() =>{\r\n  if (notetitle !=\"\" && message!= \"\" && daysLeft>=0){\r\n    const { data } = await axios.put(`/userupdate/${userId}`,{notetitle,message,startDate,endDate,radiobutton})\r\n    console.log(data) ;\r\n    history.push('/user')\r\n  }\r\n  else{\r\n    alert('check Info again')\r\n  }\r\n \r\n}\r\n \r\n useEffect(()=>{\r\n  setButtonUpdateCheck(true);\r\n  const fetchData = async() =>{\r\n        const {data} = await axios.get(`/messageInfo/${userId}`);\r\n        setDataUpdate(data);\r\n        setButtonUpdateCheck(false)\r\n        setNoteTitle(data.noteTitle);\r\n        setMessage(data.message);\r\n        setRadioButton(data.autoDelete);\r\n    }\r\n    (userId) && fetchData() \r\n },[userId])\r\n useEffect(()=>{\r\n   if (!user){\r\n     history.push('/')\r\n   }\r\n })\r\n  return (\r\n    <div>\r\n        <form onSubmit={SubmitFormHandler} className=\"mx-auto\" style={{width:\"500px\"}}>\r\n            <div className=\"form-group\">\r\n            <label htmlFor=\"notetitle\">Note</label>\r\n            <input \r\n            className=\"form-control\" \r\n            id=\"notetitle\" \r\n            placeholder=\"Enter Your Note Name\"\r\n            value={notetitle}\r\n            onChange={(e)=>{setNoteTitle(e.target.value)}}\r\n            />\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n            <label htmlFor=\"message\">Description</label>\r\n            <textarea  \r\n            className=\"form-control\" \r\n            id=\"message\" \r\n            placeholder=\"message\"\r\n            value={message}\r\n            onChange={(e)=>{setMessage(e.target.value)}}\r\n            />\r\n            </div>\r\n            <p>Time complete</p>\r\n            <div className=\"row my-3\">\r\n                        <div className=\"col-md-6 col-12\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"Fromdate\" className=\"font-weight-bolder mr-3\">From Date </label>\r\n                                <DatePicker selected={startDate} onChange={date=>{setStartDate(date)}} className=\"form-control\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6 col-12\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"Todate\" className=\"font-weight-bolder mr-3\">To Date </label>\r\n                                <DatePicker selected={endDate} onChange={date=>setEndDate(date)} className=\"form-control\" />\r\n                            </div>\r\n                        </div>\r\n                        {daysLeft < 0 && <p className=\"mx-auto\" style={{color:\"red\"}}>Check your date again</p>}\r\n              </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"radiobutton\"></label>\r\n              <input\r\n              type=\"radio\"\r\n              id=\"radiobutton\" \r\n              checked={radiobutton} \r\n              onClick={()=>{setRadioButton(!radiobutton)}}\r\n              /> Auto delete when day is expired\r\n            </div><br/>\r\n\r\n\r\n          {!userId \r\n          ? <button type=\"submit\" disabled={daysLeft<0 && true} className=\"btn btn-primary\">Submit</button>\r\n          : <button type=\"button\" onClick={handleUpdate} disabled={buttonUpdateCheck?\"true\":\"\"} className=\"btn btn-primary\">Update</button>\r\n          } \r\n        </form>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default CreateUser;\r\n","C:\\Users\\Administrator\\crudmernstack\\client\\src\\components\\EditUser.js",[],"C:\\Users\\Administrator\\crudmernstack\\client\\src\\components\\Login.js",[],"C:\\Users\\Administrator\\crudmernstack\\client\\src\\components\\Register.js",[],"C:\\Users\\Administrator\\crudmernstack\\client\\src\\components\\User.js",["46","47","48","49"],"import react from 'react';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport { FileEarmarkWord } from 'react-bootstrap-icons';\r\nimport { useHistory } from 'react-router-dom';\r\nconst User = ({user,reload}) => {\r\n  const customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)',\r\n      width                 : '60%',\r\n      textAlign             : 'center',\r\n      posistion             : 'relative',\r\n      height                : 'auto',\r\n      \r\nwordWrap: 'break-word'\r\n    }\r\n  };\r\n  var subtitle;\r\n  const [modalIsOpen,setIsOpen] = useState(false);\r\n  function openModal() {\r\n    setIsOpen(true);\r\n  }\r\n  const handleEdit = (itemEdit) =>{\r\n    history.push(`/create/${itemEdit._id}`)\r\n  }\r\n \r\n  function closeModal(){\r\n    setIsOpen(false);\r\n  }\r\n  const [show, setShow] = useState(false);\r\n  const {noteTitle, message, _id,startDate, endDate,autoDelete} = user;\r\n  const history = useHistory(); \r\n  const handleOnclick = async (id) =>{\r\n    const {data} = await axios.delete(`http://localhost:4000/delete/${id}`);\r\n    alert(data.message)\r\n    reload()\r\n}\r\n  \r\n  return ( \r\n        <>\r\n        <tr>\r\n              <th>{noteTitle}</th>\r\n              <td><FileEarmarkWord onClick={openModal}/></td>\r\n              <td>{moment(startDate).format('DD-MM-YYYY')}</td>\r\n              <td>{moment(endDate).format('DD-MM-YYYY')}</td>\r\n              <td><input id=\"autocomple\" type=\"checkbox\" checked ={autoDelete}/></td>\r\n              <td><button onClick={() => {handleEdit(user)}} type=\"button\" className=\"btn btn-primary mr-1\">Edit</button><button onClick={() => handleOnclick(_id)} type=\"button\" className=\"btn btn-primary ml-1\">Delete</button></td>\r\n        </tr>\r\n        <div>\r\n        <Modal\r\n          isOpen={modalIsOpen}\r\n          onRequestClose={closeModal}\r\n          style={customStyles}\r\n          contentLabel=\"Example Modal\"\r\n        >\r\n          <p className=\"text-danger\">Description</p>\r\n          <button style={{position:\"absolute\", right:'10px', top:\"10px\"}} className=\"btn btn-close\" onClick={closeModal}>x</button>\r\n          <p>{message}</p>\r\n        </Modal>\r\n      </div>\r\n        </>\r\n      \r\n  );\r\n}\r\n\r\n\r\nexport default User;\r\n",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":16,"column":10,"nodeType":"56","messageId":"57","endLine":16,"endColumn":20},{"ruleId":"58","severity":1,"message":"59","line":40,"column":17,"nodeType":"60","messageId":"61","endLine":40,"endColumn":19},{"ruleId":"58","severity":1,"message":"59","line":40,"column":32,"nodeType":"60","messageId":"61","endLine":40,"endColumn":34},{"ruleId":"54","severity":1,"message":"62","line":1,"column":8,"nodeType":"56","messageId":"57","endLine":1,"endColumn":13},{"ruleId":"54","severity":1,"message":"63","line":25,"column":7,"nodeType":"56","messageId":"57","endLine":25,"endColumn":15},{"ruleId":"54","severity":1,"message":"64","line":37,"column":10,"nodeType":"56","messageId":"57","endLine":37,"endColumn":14},{"ruleId":"54","severity":1,"message":"65","line":37,"column":16,"nodeType":"56","messageId":"57","endLine":37,"endColumn":23},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'dataUpdate' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'react' is defined but never used.","'subtitle' is defined but never used.","'show' is assigned a value but never used.","'setShow' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]